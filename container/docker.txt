# Pull an image from Docker Hub and run it as a container

# Use the docker CLI to list your images
docker images

# Pull your first image from Docker Hub.
docker pull hello-world

# Run the hello-world image as a container.
docker run hello-world

# List the containers to see that your container ran and exited successfully.
docker ps -a

# Build an image using a Dockerfile
The FROM instruction initializes a new build stage and specifies the base image that subsequent instructions will build upon.
The COPY command enables us to copy files to our image.
The RUN instruction executes commands.
The EXPOSE instruction exposes a particular port with a specified protocol inside a Docker Container.
The CMD instruction provides a default for executing a container, or in other words, an executable that should run in your container.

# Build the image
docker build . -t myimage:v1

# List images to see your image tagged myimage:v1 in the table.
docker images

# Run the image as a container
# your image is built, run it as a container with the following command
docker run -dp 8080:8080 myimage:v1

# Run the curl command to ping the application as given below.
curl localhost:8080

# Now to stop the container we use docker stop followed by the container id. The following command uses docker ps -q to pass in the list of all running containers:
docker stop $(docker ps -q)

# Check if the container has stopped by running the following command.
docker ps 

# Push the image to IBM Cloud Container Registry
# The environment should have already logged you into the IBM Cloud account that has been automatically generated for you by the Skills Network Labs environment. 
The following command will give you information about the account youâ€™re targeting:
ibmcloud target

# The environment also created an IBM Cloud Container Registry (ICR) namespace for you. 
Since Container Registry is multi-tenant, namespaces are used to divide the registry among several users. 
Use the following command to see the namespaces you have access to:

ibmcloud cr namespaces

You should see two namespaces listed starting with sn-labs:
The first one with your username is a namespace just for you. You have full read and write access to this namespace.
The second namespace, which is a shared namespace, provides you with only Read Access.

# Ensure that you are targeting the region appropriate to your cloud account, 
for instance us-south region where these namespaces reside as you saw in the output of the ibmcloud target command.
ibmcloud cr region-set us-south

# Log your local Docker daemon into IBM Cloud Container Registry so that you can push to and pull from the registry.
ibmcloud cr login

# Export your namespace as an environment variable so that it can be used in subsequent commands.
export MY_NAMESPACE=sn-labs-$USERNAME

# Tag your image so that it can be pushed to IBM Cloud Container Registry.
docker tag myimage:v1 us.icr.io/$MY_NAMESPACE/hello-world:1

# Push the newly tagged image to IBM Cloud Container Registry.
docker push us.icr.io/$MY_NAMESPACE/hello-world:1

# Verify that the image was successfully pushed by listing images in Container Registry.
ibmcloud cr images
ibmcloud cr images --restrict $MY_NAMESPACE